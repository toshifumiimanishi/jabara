/**
 * @license
 * Jabara.js v1.0.0
 * Released under the MIT License.
 */
var Jabara=function(){"use strict";function t(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}return{init:function(r){var e=r.selector,n=r.speed,i=void 0===n?1.5:n,o=r.easing,a=void 0===o?"ease-out":o,c=document.querySelectorAll(e);c.length&&t(c).forEach((function(t){var r=!1,e=t.firstElementChild,n=e.nextElementSibling;if(!n)throw new Error("There is a problem with the HTML structure.");var o=n.scrollHeight,c=o*i;t.style.overflow="hidden",n.style.height="0",n.style.transitionDuration="".concat(c,"ms"),n.style.transitionTimingFunction=a,e.addEventListener("click",(function(t){var e=t.currentTarget;n.style.height=r?"0":"".concat(o,"px"),r=!r,e.setAttribute("aria-expanded",r.toString())}))}))}}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamFiYXJhLm1pbi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LnRzIiwiLi4vc3JjL2phYmFyYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSmFiYXJhIGZyb20gJy4vamFiYXJhJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBKYWJhcmEsXG59O1xuIiwidHlwZSBPcHRpb25zID0ge1xuICBzZWxlY3Rvcjogc3RyaW5nXG4gIHNwZWVkPzogbnVtYmVyIHwgdW5kZWZpbmVkXG4gIGVhc2luZz86IHN0cmluZyB8IHVuZGVmaW5lZFxufVxuXG5jb25zdCBKYWJyYTogKG9wdGlvbnM6IE9wdGlvbnMpID0+IHZvaWQgPSAoeyBzZWxlY3Rvciwgc3BlZWQgPSAxLjUsIGVhc2luZyA9ICdlYXNlLW91dCcgfSkgPT4ge1xuICBjb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuXG4gIGlmIChlbGVtZW50cy5sZW5ndGgpIHtcbiAgICBbLi4uZWxlbWVudHNdLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgIGxldCBpc0V4cGFuZGVkID0gZmFsc2U7XG4gICAgICBjb25zdCB0cmlnZ2VyRWxlbWVudCA9IGVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gdHJpZ2dlckVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nIGFzIEhUTUxFbGVtZW50O1xuXG4gICAgICBpZiAoIXRhcmdldEVsZW1lbnQpIHRocm93IG5ldyBFcnJvcignVGhlcmUgaXMgYSBwcm9ibGVtIHdpdGggdGhlIEhUTUwgc3RydWN0dXJlLicpO1xuXG4gICAgICBjb25zdCBkaW1lbnNpb24gPSB0YXJnZXRFbGVtZW50LnNjcm9sbEhlaWdodDtcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gZGltZW5zaW9uICogc3BlZWQ7XG4gICAgICAoZWxlbWVudCBhcyBIVE1MRWxlbWVudCkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgIHRhcmdldEVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gJzAnO1xuICAgICAgdGFyZ2V0RWxlbWVudC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBgJHtkdXJhdGlvbn1tc2A7XG4gICAgICB0YXJnZXRFbGVtZW50LnN0eWxlLnRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiA9IGVhc2luZztcblxuICAgICAgdHJpZ2dlckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc3QgY3VycmVudFRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIHRhcmdldEVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gaXNFeHBhbmRlZCA/ICcwJyA6IGAke2RpbWVuc2lvbn1weGA7XG4gICAgICAgIGlzRXhwYW5kZWQgPSAhaXNFeHBhbmRlZDtcbiAgICAgICAgY3VycmVudFRhcmdldC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCBpc0V4cGFuZGVkLnRvU3RyaW5nKCkpO1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBKYWJyYTtcbiJdLCJuYW1lcyI6WyJpbml0Iiwic2VsZWN0b3IiLCJzcGVlZCIsImVhc2luZyIsImVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJpc0V4cGFuZGVkIiwidHJpZ2dlckVsZW1lbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsInRhcmdldEVsZW1lbnQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJFcnJvciIsImRpbWVuc2lvbiIsInNjcm9sbEhlaWdodCIsImR1cmF0aW9uIiwic3R5bGUiLCJvdmVyZmxvdyIsImhlaWdodCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImN1cnJlbnRUYXJnZXQiLCJzZXRBdHRyaWJ1dGUiLCJ0b1N0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7bXhCQUVlLENBQ2JBLEtDR3dDLGdCQUFHQyxJQUFBQSxhQUFVQyxNQUFBQSxhQUFRLFVBQUtDLE9BQUFBLGFBQVMsYUFDckVDLEVBQVdDLFNBQVNDLGlCQUFpQkwsR0FFdkNHLEVBQVNHLFVBQ1BILEdBQVVJLFNBQVEsU0FBQ0MsT0FDakJDLEdBQWEsRUFDWEMsRUFBaUJGLEVBQVFHLGtCQUN6QkMsRUFBZ0JGLEVBQWVHLHVCQUVoQ0QsRUFBZSxNQUFNLElBQUlFLE1BQU0sbURBRTlCQyxFQUFZSCxFQUFjSSxhQUMxQkMsRUFBV0YsRUFBWWQsRUFDNUJPLEVBQXdCVSxNQUFNQyxTQUFXLFNBQzFDUCxFQUFjTSxNQUFNRSxPQUFTLElBQzdCUixFQUFjTSxNQUFNRyw2QkFBd0JKLFFBQzVDTCxFQUFjTSxNQUFNSSx5QkFBMkJwQixFQUUvQ1EsRUFBZWEsaUJBQWlCLFNBQVMsU0FBQ0MsT0FDbENDLEVBQWdCRCxFQUFNQyxjQUM1QmIsRUFBY00sTUFBTUUsT0FBU1gsRUFBYSxjQUFTTSxRQUNuRE4sR0FBY0EsRUFDZGdCLEVBQWNDLGFBQWEsZ0JBQWlCakIsRUFBV2tCIn0=
