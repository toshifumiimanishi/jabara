
/**
 * @license
 * Jabara.js v1.0.0
 * Released under the MIT License.
 */

const Jabra = ({ selector, speed = 1.5, easing = 'ease-out' }) => {
    const elements = document.querySelectorAll(selector);
    if (elements.length) {
        [...elements].forEach((element) => {
            let isExpanded = false;
            const triggerElement = element.firstElementChild;
            const targetElement = triggerElement.nextElementSibling;
            if (!targetElement)
                throw new Error('There is a problem with the HTML structure.');
            const dimension = targetElement.scrollHeight;
            const duration = dimension * speed;
            element.style.overflow = 'hidden';
            targetElement.style.height = '0';
            targetElement.style.transitionDuration = `${duration}ms`;
            targetElement.style.transitionTimingFunction = easing;
            triggerElement.addEventListener('click', (event) => {
                const currentTarget = event.currentTarget;
                targetElement.style.height = isExpanded ? '0' : `${dimension}px`;
                isExpanded = !isExpanded;
                currentTarget.setAttribute('aria-expanded', isExpanded.toString());
            });
        });
    }
};

var index = {
    init: Jabra,
};

export default index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamFiYXJhLmVzLmpzIiwic291cmNlcyI6WyIuLi9zcmMvamFiYXJhLnRzIiwiLi4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbInR5cGUgT3B0aW9ucyA9IHtcbiAgc2VsZWN0b3I6IHN0cmluZ1xuICBzcGVlZD86IG51bWJlciB8IHVuZGVmaW5lZFxuICBlYXNpbmc/OiBzdHJpbmcgfCB1bmRlZmluZWRcbn1cblxuY29uc3QgSmFicmE6IChvcHRpb25zOiBPcHRpb25zKSA9PiB2b2lkID0gKHsgc2VsZWN0b3IsIHNwZWVkID0gMS41LCBlYXNpbmcgPSAnZWFzZS1vdXQnIH0pID0+IHtcbiAgY29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblxuICBpZiAoZWxlbWVudHMubGVuZ3RoKSB7XG4gICAgWy4uLmVsZW1lbnRzXS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICBsZXQgaXNFeHBhbmRlZCA9IGZhbHNlO1xuICAgICAgY29uc3QgdHJpZ2dlckVsZW1lbnQgPSBlbGVtZW50LmZpcnN0RWxlbWVudENoaWxkIGFzIEhUTUxFbGVtZW50O1xuICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IHRyaWdnZXJFbGVtZW50Lm5leHRFbGVtZW50U2libGluZyBhcyBIVE1MRWxlbWVudDtcblxuICAgICAgaWYgKCF0YXJnZXRFbGVtZW50KSB0aHJvdyBuZXcgRXJyb3IoJ1RoZXJlIGlzIGEgcHJvYmxlbSB3aXRoIHRoZSBIVE1MIHN0cnVjdHVyZS4nKTtcblxuICAgICAgY29uc3QgZGltZW5zaW9uID0gdGFyZ2V0RWxlbWVudC5zY3JvbGxIZWlnaHQ7XG4gICAgICBjb25zdCBkdXJhdGlvbiA9IGRpbWVuc2lvbiAqIHNwZWVkO1xuICAgICAgKGVsZW1lbnQgYXMgSFRNTEVsZW1lbnQpLnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgICB0YXJnZXRFbGVtZW50LnN0eWxlLmhlaWdodCA9ICcwJztcbiAgICAgIHRhcmdldEVsZW1lbnQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gYCR7ZHVyYXRpb259bXNgO1xuICAgICAgdGFyZ2V0RWxlbWVudC5zdHlsZS50cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gPSBlYXNpbmc7XG5cbiAgICAgIHRyaWdnZXJFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRUYXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgICAgICB0YXJnZXRFbGVtZW50LnN0eWxlLmhlaWdodCA9IGlzRXhwYW5kZWQgPyAnMCcgOiBgJHtkaW1lbnNpb259cHhgO1xuICAgICAgICBpc0V4cGFuZGVkID0gIWlzRXhwYW5kZWQ7XG4gICAgICAgIGN1cnJlbnRUYXJnZXQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgaXNFeHBhbmRlZC50b1N0cmluZygpKTtcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgSmFicmE7XG4iLCJpbXBvcnQgSmFiYXJhIGZyb20gJy4vamFiYXJhJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBKYWJhcmEsXG59O1xuIl0sIm5hbWVzIjpbIkphYmFyYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU1BLE1BQU0sS0FBSyxHQUErQixDQUFDLEVBQUUsUUFBUSxFQUFFLEtBQUssR0FBRyxHQUFHLEVBQUUsTUFBTSxHQUFHLFVBQVUsRUFBRTtJQUN2RixNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFckQsSUFBSSxRQUFRLENBQUMsTUFBTSxFQUFFO1FBQ25CLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPO1lBQzVCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztZQUN2QixNQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsaUJBQWdDLENBQUM7WUFDaEUsTUFBTSxhQUFhLEdBQUcsY0FBYyxDQUFDLGtCQUFpQyxDQUFDO1lBRXZFLElBQUksQ0FBQyxhQUFhO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNkNBQTZDLENBQUMsQ0FBQztZQUVuRixNQUFNLFNBQVMsR0FBRyxhQUFhLENBQUMsWUFBWSxDQUFDO1lBQzdDLE1BQU0sUUFBUSxHQUFHLFNBQVMsR0FBRyxLQUFLLENBQUM7WUFDbEMsT0FBdUIsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUNuRCxhQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7WUFDakMsYUFBYSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLFFBQVEsSUFBSSxDQUFDO1lBQ3pELGFBQWEsQ0FBQyxLQUFLLENBQUMsd0JBQXdCLEdBQUcsTUFBTSxDQUFDO1lBRXRELGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLO2dCQUM3QyxNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsYUFBNEIsQ0FBQztnQkFDekQsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsVUFBVSxHQUFHLEdBQUcsR0FBRyxHQUFHLFNBQVMsSUFBSSxDQUFDO2dCQUNqRSxVQUFVLEdBQUcsQ0FBQyxVQUFVLENBQUM7Z0JBQ3pCLGFBQWEsQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO2FBQ3BFLENBQUMsQ0FBQTtTQUNILENBQUMsQ0FBQTtLQUNIO0FBQ0gsQ0FBQzs7QUM5QkQsWUFBZTtJQUNiLElBQUksRUFBRUEsS0FBTTtDQUNiOzs7OyJ9
